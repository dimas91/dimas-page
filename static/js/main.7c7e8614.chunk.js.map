{"version":3,"sources":["components/Home.tsx","App.tsx","constants/wordlist.ts","routes/Woordeltje.tsx","index.tsx"],"names":["Home","style","display","flexDirection","alignItems","fontWeight","fontSize","justifyContent","gap","className","href","target","rel","padding","App","WORDS","Woordeltje","id","Evaluation","Board","useState","rows","setRows","currentRow","setCurrentRow","useEffect","arr","i","push","length","letters","eventName","handler","element","window","savedHandler","useRef","current","eventListener","event","addEventListener","removeEventListener","useEventListener","key","console","log","String","match","newRows","oldLetters","row","toLowerCase","slice","alert","map","GameRow","letterArray","setLetterArray","newArray","charAt","letter","GameTile","TBD","ReactDOM","render","path","document","getElementById"],"mappings":"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","file":"static/js/main.7c7e8614.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Home() {\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n      <h1 style={{ fontWeight: \"normal\", fontSize: \"400%\" }}>DIMAS TICHELAAR</h1>\r\n      <p>I am currently working on my personal website. Please come back later to get to know more about me. Until then, you can find me here:</p>\r\n      <ul style={{ display: \"flex\", justifyContent: \"space-between\", gap: \"2em\" }}>\r\n        <li><i className={\"fab fa-linkedin fa-lg\"}></i><a href=\"https://www.linkedin.com/in/dimas-tichelaar/\" target=\"_blank\" rel=\"noreferrer\" style={{ padding: \"0em .5em\" }}>Linkedin</a></li>\r\n        <li><i className={\"fab fa-twitter fa-lg\"}></i><a href=\"https://twitter.com/Dimas091\" target=\"_blank\" rel=\"noreferrer\" style={{ padding: \"0em .5em\" }}>Twitter</a></li>\r\n        <li><i className={\"fab fa-github fa-lg\"}></i><a href=\"https://github.com/dimas91\" target=\"_blank\" rel=\"noreferrer\" style={{ padding: \"0em .5em\" }}>Github</a></li>\r\n        <li><i className={\"fab fa-soundcloud fa-lg\"}></i><a href=\"https://soundcloud.com/dimas-music\" target=\"_blank\" rel=\"noreferrer\" style={{ padding: \"0em .5em\" }}>Soundcloud</a></li>\r\n      </ul>\r\n      <p>‚ù§ - Dimas</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import './App.css';\r\nimport Home from './components/Home'\r\n\r\nfunction App() {\r\n  return (\r\n    <Home />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const WORDS = [\r\n    'woord'\r\n]","import React, { useEffect, useRef, useState } from 'react';\r\nimport { WORDS } from '../constants/wordlist';\r\n\r\nexport default function Woordeltje() {\r\n    return (\r\n        <div id=\"game\" style={{ padding: \"1rem 0\" }}>\r\n            <header>\r\n                <div className=\"menu\"></div>\r\n                <div className=\"title\">Woordeltje</div>\r\n                <div className=\"menu\"></div>\r\n            </header>\r\n            <div id=\"board-container\">\r\n                <Board />\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\ntype RowType = { length: number, letters: string }\r\n\r\nconst Board = () => {\r\n    const [rows, setRows] = useState<RowType[]>([]);\r\n    const [currentRow, setCurrentRow] = useState(0);\r\n    const [wordOfTheDay, setWordOfTheDay] = useState(WORDS[0]);\r\n    const [currentTileIndex, setCurrentTileIndex] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let arr: { length: number, letters: string }[] = [];\r\n        for (var i = 0; i < 6; i++) {\r\n            arr.push({ length: 5, letters: \"\" });\r\n        }\r\n        setRows(arr);\r\n    }, []);\r\n\r\n    const useEventListener = (eventName: any, handler: any, element = window) => {\r\n        const savedHandler: any = useRef();\r\n\r\n        useEffect(() => {\r\n            savedHandler.current = handler;\r\n        }, [handler]);\r\n\r\n        useEffect(() => {\r\n            const eventListener = (event: any) => savedHandler.current(event);\r\n            element.addEventListener(eventName, eventListener);\r\n            return () => {\r\n                element.removeEventListener(eventName, eventListener);\r\n            };\r\n        }, [eventName, element]);\r\n    };\r\n\r\n    const handler = ({ key }: any) => {\r\n        console.log(String(key));\r\n        //if ( key.length == 1 && String(key).toLowerCase() != String(key).toUpperCase()) {\r\n            if (String(key).length === 1 && String(key).match(/[a-z]/i) && rows[currentRow].letters.length < rows[currentRow].length) {\r\n            // TODO: Add letter here\r\n            let newRows = [...rows];\r\n            let oldLetters = rows[currentRow].letters;\r\n            let row = {\r\n                ...rows[currentRow],\r\n                letters: oldLetters + String(key).toLowerCase()\r\n            }\r\n            newRows[currentRow] = row;\r\n            setRows(newRows);\r\n        }\r\n        else if (String(key) === \"Backspace\") {\r\n            // TODO: Remove letter here\r\n            //console.log(\"Backspace pressed!\");\r\n            if (rows[currentRow].letters.length > 0) {\r\n                let newRows = [...rows];\r\n                let oldLetters = rows[currentRow].letters;\r\n                let row = {\r\n                    ...rows[currentRow],\r\n                    letters: oldLetters.slice(0, -1)\r\n                }\r\n                newRows[currentRow] = row;\r\n                setRows(newRows);\r\n            }\r\n            \r\n        }\r\n        else if (String(key) === \"Enter\") {\r\n            // TODO: Submit row\r\n            //console.log(\"Enter pressed!\");\r\n            if (rows[currentRow].letters.length < 6 - 1) {\r\n                alert(\"Not enough letters!\");\r\n            }\r\n            else if (currentRow < 6 - 1) {\r\n                // TODO: Check word list\r\n                setCurrentRow(currentRow + 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    const submitRow = () => {\r\n        if (rows[currentRow].letters.length < 6 - 1) {\r\n            alert(\"Not enough letters!\");\r\n        }\r\n        else if (currentRow < 6 - 1) {\r\n            // TODO: Check word list\r\n            setCurrentRow(currentRow + 1);\r\n        }\r\n    }\r\n\r\n    const evaluateRow = () => {\r\n\r\n    }\r\n\r\n    useEventListener(\"keydown\", handler);\r\n\r\n    return (\r\n        <div>\r\n            {rows.map((row, i) => {\r\n                return (\r\n                    <GameRow key={i} length={row.length} letters={row.letters} />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst GameRow = ({ length, letters }: RowType) => {\r\n    const [letterArray, setLetterArray] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        const newArray = []\r\n        for (var i = 0; i < length; i++) {\r\n            newArray.push(letters.charAt(i));\r\n        }\r\n        setLetterArray(newArray);\r\n    }, [letters, length])\r\n\r\n    return (\r\n        <div className='row'>\r\n            {letterArray.map((letter, i) => {\r\n                return <GameTile key={i} letter={letter} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nenum Evaluation {\r\n    TBD = \"tbd\",\r\n    Absent = \"absent\",\r\n    Present = \"present\",\r\n    Correct = \"correct\"\r\n}\r\n\r\ntype TileType = { letter: string }\r\n\r\nconst GameTile = ({ letter }: TileType) => {\r\n    const [evaluation, setEvaluation] = useState(Evaluation.TBD);\r\n    const [isRevealed, setIsRevealed] = useState(false);\r\n\r\n    return (\r\n        <div className='tile'>\r\n            {letter}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { \r\n  BrowserRouter,\r\n  Routes,\r\n  Route } from \"react-router-dom\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport Woordeltje from './routes/Woordeltje';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Routes>\r\n      <Route path=\"/\" element={<App />} />\r\n      <Route path=\"woordeltje\" element={<Woordeltje />} />\r\n    </Routes>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}